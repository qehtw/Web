import math

def f(x):
    """
    Цільова функція f(x) = e^(-x) - x, для якої шукаємо корінь.
    """
    return math.exp(-x) - x


def secant_method(f, x0, x1, tol=1e-6, max_iter=100):   
    global x2  # Глобальна змінна для збереження поточного наближення кореня
    for _ in range(max_iter):
        # Обчислюємо нове наближення x2 за формулою методу січних
        x2 = x1 - f(x1) * (x1 - x0) / (f(x1) - f(x0))

        # Перевіряємо, чи різниця між новим і попереднім значенням x2 менша за точність
        if abs((x2 - x1) / x2) < tol:
            return x2  # Повертаємо знайдене значення кореня

        # Оновлюємо наближення: x0 стає x1, а x1 стає x2
        x0, x1 = x1, x2

    # Якщо досягнута максимальна кількість ітерацій, повертаємо поточне значення x2
    return x2


# Викликаємо метод січних для пошуку кореня функції f на інтервалі [-2, 3]
root = secant_method(f, -2, 3)

# Виводимо знайдений корінь
print(f"root: {root}")

# Виводимо значення функції в знайденому корені (має бути близьким до нуля)
print(f"f({root}) = {f(root)}")
